Source: mythfrontend-qml
Section: graphics
Priority: optional
Maintainer: Paul Harrison <pharrison@mythtv.org>
Uploaders: Paul Harrison <pharrison@mythtv.org>
Homepage: http://www.mythtv.org
Standards-Version: 3.9.4
Vcs-Git: https://github.com/paul-h/packaging.git
Build-Conflicts: libqt3-mt-dev
Build-Depends:  debhelper (>= 9),
                pkg-config,
                libqt5opengl5-dev,
                qt5-qmake,
                qtscript5-dev,
                qtdeclarative5-dev,
                qtwebengine5-dev,
                dh-python | python-central,
                python,
                python-oauth,
                python-lxml,
                python-mysqldb,
                python-pycurl,
                python-urlgrabber,
                libvlccore-dev,
                libvlc-dev,
                zlib1g-dev

Package: mythfrontend-qml
Architecture: any
Depends: python,
         python-feedparser,
         python3-streamlink,
         streamlink,
         qml-module-qtwebengine,
         libqt5webenginecore5,
         qml-module-qtmultimedia,
         qml-module-qtquick-xmllistmodel,
         qml-module-qt-labs-folderlistmodel,
         qml-module-qtquick-controls,
         qml-module-qtav,
         qml-module-qtwebengine,
         qml-module-qtwebsockets,
         python3-streamlink,
         streamlink,
         zlib1g
Description: Personal video recorder application (QML client)
 THIS SOFTWARE IS STILL IN ALPHA PRODUCTION AND IS NOT FULLY FUNCTIONAL.

 MythQML is an experimental frontend (client) to MythTV based on QT's QML.
 More Information about MythQML is available at https://mythqml.net

 This project has both a stable and development PPA . Most users should use the
 stable PPA where the packages are built from the stable branch and the hope is
 they should be fairly stable but as noted above some features are still not
 fully functional and subject to change.

 The main focus is to create a modern looking frontend which allows mixing
 normal TV content with streaming content like YouTube videos, webcam feeds,
 ZoneMinder CCTV feeds. There is currently support for up to 4 video feeds
 that can be displayed in various screen layouts like PIP, PBP, Quad Screen etc.

 The long term goal is to create a frontend that only uses the MythTV services
 API and doesn't require access to the MythTV database or network protocol but
 the current version requires both.
